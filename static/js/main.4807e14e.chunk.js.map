{"version":3,"sources":["Die.js","App.js","index.js"],"names":["Die","props","styles","backgroundColor","isSelected","react_default","a","createElement","style","className","onClick","toggle","value","App","_React$useState","React","useState","allNewDice","_React$useState2","Object","slicedToArray","dice","setdice","_React$useState3","_React$useState4","tenzies","setTenzies","_React$useState5","_React$useState6","score","setscore","arr","i","push","generatenewdice","id","nanoid","Math","ceil","random","useEffect","allHeld","length","firstValue","allSameValue","console","log","dices","map","item","givenid","objectSpread2","react_confetti_min_default","oldscore","rolldice","ReactDOM","render","document","getElementById"],"mappings":"sLACe,SAASA,EAAIC,GAC3B,IAAMC,EAAS,CACdC,iBAAsC,IAArBF,EAAMG,WAAsB,UAAY,SAE1D,OAECC,EAAAC,EAAAC,cAAA,OAAKC,MAAON,EAAQO,UAAU,cAAcC,QAAST,EAAMU,QAC3DN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWR,EAAMW,4BCHnB,SAASC,IACvB,IAAAC,EAAwBC,IAAMC,SAASC,KAAvCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAAOO,EAAPH,EAAA,GAAaI,EAAbJ,EAAA,GAEAK,EAA8BR,IAAMC,UAAS,GAA7CQ,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAOE,EAAPD,EAAA,GAAgBE,EAAhBF,EAAA,GACAG,EAA0BZ,IAAMC,SAAS,GAAzCY,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAOE,EAAPD,EAAA,GAAcE,EAAdF,EAAA,GAkCA,SAASX,IAER,IADA,IAAIc,EAAI,GACAC,EAAE,EAAGA,EAAE,GAAIA,IAClBD,EAAIE,KAAKC,KAEV,OAAOH,EAGR,SAASG,IAER,MAAO,CACNC,GAAIC,cACJxB,MAAOyB,KAAKC,KAAmB,EAAdD,KAAKE,UACtBnC,YAAY,GA1CdW,IAAMyB,UAAU,WAGT,IAFA,IAAIC,GAAU,EAENT,EAAE,EAAGA,EAAEX,EAAKqB,OAAQV,KACH,IAArBX,EAAKW,GAAG5B,aACVqC,GAAU,GAKZ,IAFA,IAAME,EAAatB,EAAK,GAAGT,MACvBgC,GAAe,EACXZ,EAAE,EAAGA,EAAEX,EAAKqB,OAAQV,IACxBX,EAAKW,GAAGpB,QAAQ+B,IAClBC,GAAe,GAGbH,GAAWG,IACXlB,GAAW,GACXmB,QAAQC,IAAI,cAEjB,CAACzB,IA0CP,IAAM0B,EAAQ1B,EAAK2B,IAAI,SAAAC,GACtB,OAAO5C,EAAAC,EAAAC,cAACP,EAAD,CAAKmC,GAAIc,EAAKd,GAAIvB,MAAOqC,EAAKrC,MAAOR,WAAY6C,EAAK7C,WAAYO,OAAQ,kBAhBlF,SAAgBuC,GACf,IAAMnB,EAAMV,EAAK2B,IAAI,SAAAC,GACpB,OAAGA,EAAKd,KAAOe,EACd/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAA,GACI8B,GADJ,IAEC7C,YAAc6C,EAAK7C,aAIb6C,IAGT3B,EAAQS,GAI6EpB,CAAOsC,EAAKd,SAiBlG,OACC9B,EAAAC,EAAAC,cAAA,YACCkB,GAAWpB,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,MACZD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAb,qGACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYsC,IAChB,IAAVtB,EACApB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcC,QAAS,kBA9D1CgB,GAAW,GACXJ,EAAQL,UACRa,EAAS,KA4DR,YAEAzB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcC,QAAS,kBAvB3C,WACCoB,EAAS,SAAAuB,GAAQ,OAAEA,EAAS,IAC5BR,QAAQC,IAAIjB,GACZ,IAAME,EAAMV,EAAK2B,IAAI,SAAAC,GACpB,OAAqB,IAAlBA,EAAK7C,WACA6C,EAGAf,MAGTZ,EAAQS,GAYsCuB,KAA7C,SAEU,IAAV7B,GAAkBpB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAWJ,EAAAC,EAAAC,cAAA,qBAAgBF,EAAAC,EAAAC,cAAA,0BAAkBsB,EAAlB,OCrG/D0B,IAASC,OAAOnD,EAAAC,EAAAC,cAACM,EAAD,MAAU4C,SAASC,eAAe","file":"static/js/main.4807e14e.chunk.js","sourcesContent":["import React from \"react\"\r\nexport default function Die(props){\r\n\tconst styles = {\r\n\t\tbackgroundColor: props.isSelected === true ? \"#59E391\" : \"white\"\r\n\t}\r\n\treturn(\r\n\t\t\r\n\t\t<div style={styles} className=\"single-dice\" onClick={props.toggle}>\r\n\t\t<div className=\"die-num\">{props.value}</div>\r\n\r\n\t\t</div>\r\n\t\t)\r\n}","import React from \"react\"\r\nimport \"./style.css\"\r\nimport {nanoid} from \"nanoid\"\r\nimport Die from \"./Die\"\r\nimport Confetti from \"react-confetti\"\r\nexport default function App(){\r\n\tconst [dice, setdice] = React.useState(allNewDice())\r\n\r\n\tconst [tenzies, setTenzies] = React.useState(false)\r\n\tconst [score, setscore] = React.useState(0)\r\n\r\n\r\n\r\n\r\n\tReact.useEffect(() => {\r\n        let allHeld = true\r\n\r\n        for(let i=0; i<dice.length; i++){\r\n        \tif(dice[i].isSelected===false){\r\n        \t\tallHeld = false\r\n        \t}\r\n        }\r\n        const firstValue = dice[0].value\r\n        let allSameValue = true\r\n        for(let i=0; i<dice.length; i++){\r\n        \tif(dice[i].value!==firstValue){\r\n        \t\tallSameValue = false\r\n        \t}\r\n        }\r\n        if (allHeld && allSameValue) {\r\n            setTenzies(true)\r\n            console.log(\"You won!\")\r\n        }\r\n    }, [dice])\r\n\r\n\r\n\r\n\tfunction reset(){\r\n\t\tsetTenzies(false)\r\n\t\tsetdice(allNewDice())\r\n\t\tsetscore(0)\r\n\t}\r\n\r\n\tfunction allNewDice(){\r\n\t\tlet arr=[]\r\n\t\tfor(let i=0; i<10; i++){\r\n\t\t\tarr.push(generatenewdice())\r\n\t\t}\r\n\t\treturn arr\r\n\t}\r\n\r\n\tfunction generatenewdice(){\r\n\r\n\t\treturn({\r\n\t\t\tid: nanoid(),\r\n\t\t\tvalue: Math.ceil(Math.random()*6),\r\n\t\t\tisSelected: false\r\n\t\t})\r\n\t} \r\n\r\n\tfunction toggle(givenid){\r\n\t\tconst arr = dice.map(item => {\r\n\t\t\tif(item.id === givenid){\r\n\t\t\t\treturn({\r\n\t\t\t\t\t...item,\r\n\t\t\t\t\tisSelected : !item.isSelected\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn item\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetdice(arr)\r\n\t}\r\n\r\n\tconst dices = dice.map(item => {\r\n\t\treturn(<Die id={item.id} value={item.value} isSelected={item.isSelected} toggle={()=>toggle(item.id)}/>)\r\n\t})\r\n\r\n\tfunction rolldice(){\r\n\t\tsetscore(oldscore=>oldscore+1)\r\n\t\tconsole.log(score)\r\n\t\tconst arr = dice.map(item => {\r\n\t\t\tif(item.isSelected===true){\r\n\t\t\t\treturn item\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn(generatenewdice())\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetdice(arr)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<main>\r\n\t\t{tenzies && <Confetti />}\r\n\t\t<h1>Tenzies</h1>\r\n\t\t<p className=\"inst\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\r\n\t\t<div className=\"alldices\">{dices}</div>\r\n\t\t{tenzies===true ? \r\n\t\t\t<button className=\"roll-button\" onClick={()=>reset()}>New Game</button> \r\n\t\t\t: \r\n\t\t\t<button className=\"roll-button\" onClick={()=>rolldice()}>Roll</button>\r\n\t\t}\r\n\t\t{tenzies===true && <div className=\"winwords\"><h2>YOU WON</h2><h2>Your Score : {score} </h2></div>}\r\n\t\t</main>\r\n\t\t)\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nReactDOM.render(<App /> , document.getElementById(\"root\"))"],"sourceRoot":""}